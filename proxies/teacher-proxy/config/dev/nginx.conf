user  nobody;
worker_processes  auto;
worker_rlimit_nofile 4096;

events {
  worker_connections  2048;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  lua_package_path '~/lua/?.lua;;';

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;

  keepalive_timeout    65;
  types_hash_max_size  2048;

  upstream institutions {
    server 192.168.2.50:8081;
  }
  upstream education {
    server 192.168.2.50:8082;
  }
  upstream tutoring {
    server 192.168.2.50:8083;
  }

  init_by_lua_block {
    function check_role()
      local role = ngx.req.get_headers()["X-Role"]
      if role ~= "teacher" then
	        local cjson = require("cjson")
	        local timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
	        local response = {
	          status = ngx.HTTP_FORBIDDEN,
	          timestamp = timestamp,
	          error = "Forbidden"
	        }
          ngx.status = ngx.HTTP_FORBIDDEN
          ngx.header["Content-Type"] = "application/json"
          ngx.say(cjson.encode(response))
          ngx.exit(ngx.HTTP_FORBIDDEN)
      end
    end
  }

  server {
    listen 80;
    server_name localhost;

    location /rest/teacher/institutions/ {
      access_by_lua_block {
        check_role()
      } 
      rewrite ^/rest/teacher/institutions/(.*)$ /$1 break;
      proxy_pass http://institutions;
    }

    location /rest/teacher/education/ {
      rewrite ^/rest/teacher/education/(.*)$ /$1 break;
      proxy_pass http://education;
    }

    location /rest/teacher/tutoring/ {
      rewrite ^/rest/teacher/tutoring/(.*)$ /$1 break;
      proxy_pass http://tutoring;
    }

    error_page 404 = @404_json;
      location @404_json {
        default_type application/json;
        return 404 '{"status":404,"error":"Request path not found at teacher proxy"}';
    }

    error_page 500 = @500_json;
      location @500_json {
        default_type application/json;
        return 500 '{"status":500,"error":"Internal error at teacher proxy"}';
    }

    error_page 502 = @502_json;
      location @502_json {
        default_type application/json;
        return 502 '{"status":502,"error":"Bad gateway at teacher proxy"}';
    }
  }
}
