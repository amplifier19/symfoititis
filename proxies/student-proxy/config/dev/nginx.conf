user  nobody;
worker_processes  auto;
worker_rlimit_nofile 4096;

env $LUA_PATH;

events {
  worker_connections  2048;
}

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  include       mime.types;
  default_type  application/octet-stream;

  lua_package_path "$LUA_PATH;;";

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;

  keepalive_timeout    65;
  types_hash_max_size  2048;

  upstream institutions {
    server 192.168.2.50:8081;
  }
  upstream education {
    server 192.168.2.50:8082;
  }
  upstream tutoring {
    server 192.168.2.50:8083;
  }
  upstream chat {
    server 192.168.2.50:8084;
  }

  server {
    listen 80;
    server_name localhost;

    location /rest/student/institutions/ {
      access_by_lua_block {
        local roles = require "roles"
        roles.check_role("student")
      } 
      rewrite ^/rest/student/institutions/(.*)$ /$1 break;
      proxy_pass http://institutions;
    }

    location /rest/student/education/ {
      access_by_lua_block {
        local roles = require "roles"
        roles.check_role("student")
      } 
      rewrite ^/rest/student/education/(.*)$ /$1 break;
      proxy_pass http://education;
    }

    location /rest/student/tutoring/ {
      access_by_lua_block {
        local roles = require "roles"
        roles.check_role("student")
      } 
      rewrite ^/rest/student/tutoring/(.*)$ /$1 break;
      proxy_pass http://tutoring;
    }

    location /rest/student/chat/ {                                                                            
      access_by_lua_block {
        local roles = require "roles"
        roles.check_role("student")                                                                                     
      }
      rewrite ^/rest/student/chat/(.*)$ /$1 break;
      client_max_body_size 50M;
      proxy_pass http://chat;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    error_page 404 = @404_json;
      location @404_json {
        default_type application/json;
        return 404 '{"status":404,"error":"Request path not found at student proxy"}';
    }

    error_page 500 = @500_json;
      location @500_json {
        default_type application/json;
        return 500 '{"status":500,"error":"Internal error at student proxy"}';
    }

    error_page 502 = @502_json;
      location @502_json {
        default_type application/json;
        return 502 '{"status":502,"error":"Bad gateway at student proxy"}';
    }
  }
}
